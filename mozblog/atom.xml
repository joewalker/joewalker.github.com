<?xml version='1.0' encoding='utf-8'?>

<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Incompleteness</title>
  <link href="http://incompleteness.me/mozblog/atom.xml" rel="self" />
  <link href="http://incompleteness.me/blog" />
  <updated>2011-12-16T12:22:33+00:00</updated>
  <id>http://incompleteness.me/</id>
  <author><name>Joe Walker</name></author>

  <entry>
    <title>Combatting Self-XSS (Part 2)</title>
    <link href="http://incompleteness.me/blog/2014/04/24/combatting-self-xss-part-2/" />
    <updated>2014-04-24T17:30:00+00:00</updated>
    <id>http://incompleteness.me/blog/2014/04/24/combatting-self-xss-part-2/</id>
    <content type="html">&lt;p&gt;The immediate context to this post is
&lt;a href="http://incompleteness.me/blog/2011/12/14/combating-self-xss/"&gt;Self-XSS&lt;/a&gt;
but it may have a wider context in avoiding other Internet scams.&lt;/p&gt;&lt;p&gt;I’d like to frame Self-XSS in terms of a human script execution engine. It’s
an interpreter - and probably not JITed, but it works with a broad and poorly
specified grammar. Not all humans have the same interpreter, but there’s enough
of a dominant language to provide a mono-culture which makes attack easy.&lt;/p&gt;&lt;p&gt;However not all script execution engines are created equal. Some come with
advanced scam detection routines. Some have random timeouts and many have
surprising execution errors. It’s not my intention to be derogatory, but it’s a
fact that not everyone has English skills the same.&lt;/p&gt;&lt;p&gt;So Self-XSS is a script that uses this script execution engine to coerce
someone to do the attacker’s bidding, probably to their own detriment. If you're
writing a scam script, you need to keep the scripts simple enough to avoid
the victims’ scam-detection, timeouts and errors.&lt;/p&gt;&lt;p&gt;These problems mean that we might be able to draw a graph of script
complexity vs completion rate (where ‘completion’ is a scam that succeeded).
It might look like this:&lt;/p&gt;&lt;img src="http://incompleteness.me/images/posts/self-xss-graph1.png" alt="Graph of complexity vs completion rate showing exponential drop off" /&gt;&lt;p&gt;I’d like to suggest that humans are not that simple and that we shouldn’t
expect something as predictable as that.&lt;/p&gt;&lt;p&gt;Many (most?) of the tasks that we complete on computers can be done purely
using unconcious / heuristic / system 1 processing (in &lt;a href="https://en.wikipedia.org/wiki/Dual_process_theory#Systems"&gt;dual process&lt;/a&gt;)
terms. That is to say using parts of the brain that are fast, pattern-based and
non-analytical. Its less common that we need to use concious / systematic /
system 2 processing (slow, lazy, analytical). (“Thinking, Fast and Slow” is
probably the canonical work to understand these terms in more depth)&lt;/p&gt;&lt;p&gt;I’d suggest that, for most people, scam detection is a system 2 operation.
So forcing use of system 2 to prevent scams might help. (Obviously this is at
odds with the “&lt;a href="http://www.amazon.com/Think-Common-Sense-Approach-Usability/dp/0789723107/"&gt;don’t make me think&lt;/a&gt;”
approach to good UX design - I’m obviously not arguing that bad design is a
good thing).&lt;/p&gt;&lt;p&gt;We don’t have a lot of data for Self-XSS. The data that I know of is:&lt;/p&gt;&lt;table&gt;
  &lt;tr&gt;
    &lt;th&gt;Attack&lt;/th&gt;
    &lt;th&gt;Completion Rate&lt;/th&gt;
    &lt;th&gt;Complexity&lt;/th&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Facebook&lt;/td&gt;
    &lt;td&gt;&amp;lt;10%&lt;/td&gt;
    &lt;td&gt;3 steps&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Win+R [1]&lt;/td&gt;
    &lt;td&gt;&amp;lt;1%&lt;/td&gt;
    &lt;td&gt;5+ steps&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Other attacks [2]&lt;/td&gt;
    &lt;td&gt;&amp;lt;1%&lt;/td&gt;
    &lt;td&gt;4+ steps&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;&lt;p&gt;It seems reasonable that an infinitely simple script would always succeed,
and that at some point of complexity the completion rate will drop to 0. So
that something like 5 data points.&lt;/p&gt;&lt;p&gt;It would be fair to criticise this as ‘not much data’, which is part of the
point:&lt;/p&gt;&lt;ul&gt;
  &lt;li&gt;If you have more data in places where Self-XSS attacks have worked, please publish them and tell me.&lt;/li&gt;
  &lt;li&gt;If you know of research into the use of system 1 vs. system 2 in detecting scams, I’d love to hear about it.&lt;/li&gt;
&lt;/ul&gt;&lt;p&gt;However, given the lack of data, it seems to me that there is a surprising
drop-off in completion rate with increasing script complexity. There isn’t much
any evidence for attacks that were somewhat complex, and got some people - it
looks as though all attacks that were somewhat complex were surprisingly
unsuccessful.&lt;/p&gt;&lt;p&gt;So the drop-off rate might look something a bit more like this:&lt;/p&gt;&lt;img src="http://incompleteness.me/images/posts/self-xss-graph2.png" alt="Graph of complexity vs completion rate showing more sudden drop-off than before" /&gt;&lt;p&gt;Which might in some small way indicate a point in script complexity where
system 2 needed to get involved, and where the analytical part of system 2 said
“Wait, am I being scammed?”&lt;/p&gt;&lt;p&gt;Summary: We shouldn't think of scams purely in terms of smart people not
getting scammed, and some sort of level of intellegence providing scam
protection. Perhaps for many people, scams are detected when system 2 gets
involved, and there may be ways in which we can design software to protect
people.&lt;/p&gt;&lt;p&gt;How does this affect browser developer tools? I believe that we have
solutions [3] to the problem that tailor the addition of complexity only to
places where people are most at risk, so 99.99% of people won't be affected.
Also the level of complexity that is being added is a low as it can be whilst
still being effective.&lt;/p&gt;&lt;p&gt;Notes:&lt;/p&gt;&lt;p&gt;[1]: Pressing Win+R on Windows systems gets you a system level command
prompt. I have no evidence that this has been used in Self-XSS attacks,
probably due to limitations in cmd.exe forced an attack script that is 5 or
more steps.&lt;/p&gt;&lt;p&gt;[2]: I've seen several demonstrations of Self-XSS that involve 4 or more
steps, but none that have a high completion rate.&lt;/p&gt;&lt;p&gt;[3]: Relevant bugs:
Firefox &lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=994134"&gt;994134&lt;/a&gt;,
&lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=664589"&gt;664589&lt;/a&gt;,
&lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=953166"&gt;953166&lt;/a&gt;,
also Chromium &lt;a href="https://code.google.com/p/chromium/issues/detail?id=345205"&gt;345205&lt;/a&gt;,
&lt;/p&gt;</content>
  </entry><entry>
    <title>Work for Mozilla building Developer Tools</title>
    <link href="http://incompleteness.me/blog/2013/03/07/work-for-mozilla-building-developer-tools/" />
    <updated>2013-03-7T16:30:00+00:00</updated>
    <id>http://incompleteness.me/blog/2013/03/07/work-for-mozilla-building-developer-tools/</id>
    <content type="html">&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: We've hired now, and very happy that Brian and
Patrick are on the team.&lt;/p&gt;&lt;p&gt;Short version:
&lt;a href="https://twitter.com/paulrouget"&gt;Paul&lt;/a&gt;,
&lt;a href="https://twitter.com/harthvader"&gt;Heather&lt;/a&gt;,
&lt;a href="https://twitter.com/ratcliffe_mike"&gt;Mike&lt;/a&gt;
&lt;a href="https://twitter.com/joewalker"&gt;and I&lt;/a&gt;
are hiring. &lt;a href="http://jobvite.com/m?3T1TJfwg"&gt;Apply here&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;The built-in developer tools are mostly
&lt;a href="https://github.com/mozilla/mozilla-central/tree/master/browser/devtools"&gt;built in JavaScript&lt;/a&gt;.
So you'll need to be comfortable with using JavaScript to create applications
(rather than just tweaking pages). Obviously our tools are just for Firefox so
we can take advantage of
&lt;a href="https://developer.mozilla.org/en-US/docs/JavaScript/ECMAScript_5_support_in_Mozilla"&gt;ES5&lt;/a&gt; and
&lt;a href="https://developer.mozilla.org/en-US/docs/JavaScript/ECMAScript_6_support_in_Mozilla"&gt;ES6&lt;/a&gt;
features the second they're added to Firefox so knowing about what's new would help too.&lt;/p&gt;&lt;p&gt;But our team is particularly about helping people understand content
(i.e. HTML and CSS) so you'll also need to understand how pages are laid out
and how to get a browser to bow to your bidding. You'll also need to be good
at creating interfaces that people want to use, and fast at learning because
there's a lot to &lt;a href="https://developer.mozilla.org/en-US/docs/The_Mozilla_platform"&gt;our platform&lt;/a&gt;.
Knowing some C++ could be useful too.&lt;/p&gt;&lt;p&gt;Perfect would be if you've spent time in the trenches of web development
thinking "&lt;em&gt;If only the tools would tell me X, Y and Z, I could be soooo much
better&lt;/em&gt;". This is your chance to make millions of people better at their
jobs.&lt;/p&gt;&lt;p&gt;Our team is all around the world, so you can enjoy working from home, and
you'll need to communicate well over IRC, video chat and email. But you'll
also be working on open source software that changes the lives of hundreds of
millions of users worldwide.&lt;/p&gt;&lt;p&gt;If you can help,
&lt;a href="http://jobvite.com/m?3T1TJfwg"&gt;apply here&lt;/a&gt;,
and contact me directly (&lt;a href="https://twitter.com/joewalker"&gt;twitter&lt;/a&gt; or
&lt;code&gt;jwalker at mozilla.com&lt;/code&gt;) to make sure you're in
the system, or to ask questions.&lt;/p&gt;</content>
  </entry><entry>
    <title>Hackathon Summary</title>
    <link href="http://incompleteness.me/blog/2012/06/27/hackathon-summary/" />
    <updated>2012-06-27T13:00:00+00:00</updated>
    <id>http://incompleteness.me/blog/2012/06/27/hackathon-summary/</id>
    <content type="html">&lt;p&gt;So yesterday a whole bunch of people to together to hack on some commands for
the new &lt;a href="http://incompleteness.me/blog/2012/06/18/firefox-command-line/"&gt;Developer
Tools Command Line&lt;/a&gt;. Thanks to everyone that took part.&lt;/p&gt;&lt;p&gt;This is a quick summary of the commands and hacks that we created. We've now
got to work out what to do with them. Some we'll clean up, localize, test and
ship, and some we'll do some we'll suggest putting onto AMO.&lt;/p&gt;&lt;table&gt;
 &lt;tr&gt;
   &lt;th&gt;Command&lt;/th&gt;
   &lt;th&gt;Description&lt;/th&gt;
   &lt;th&gt;Author(s)&lt;/th&gt;
   &lt;th&gt;Source&lt;/th&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;color&lt;/td&gt;
  &lt;td&gt;Several commands to convert between rgb, hex, hsl and color names&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://github.com/elvisds"&gt;elvisds&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://gist.github.com/2998893"&gt;Gist&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;scratchpad&lt;/td&gt;
  &lt;td&gt;Extra commands to open a empty and pre-&lt;span&gt;populated scratchpads&lt;/span&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="http://antennasoft.net/robcee/"&gt;Rob Campbell&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://gist.github.com/2995780"&gt;Gist&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;debugger&lt;/td&gt;
  &lt;td&gt;Several commands to control the debugger&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://blog.mozilla.org/tilt/"&gt;Victor Porof&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://bugzilla.mozilla.org/attachment.cgi?id=636656&amp;amp;action=diff"&gt;Patch&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;tilt refresh&lt;/td&gt;
  &lt;td&gt;Rebuilds the visualization 3D mesh and webpage texture if any changes to the DOM were made&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://blog.mozilla.org/tilt/"&gt;Victor Porof&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://bugzilla.mozilla.org/attachment.cgi?id=636659&amp;amp;action=diff"&gt;Patch&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;calllog&lt;/td&gt;
  &lt;td&gt;Use new Debugger API to log function calls&lt;/td&gt;
  &lt;td&gt;&lt;a href="http://theunfocused.net/"&gt;Blair McBride&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://github.com/Unfocused/gcli-commands/blob/master/calllog.mozcmd"&gt;Repo&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;idl&lt;/td&gt;
  &lt;td&gt;Show the IDL file for a specified XPCOM int&lt;span&gt;erface&lt;/span&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="http://theunfocused.net/"&gt;Blair McBride&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://github.com/Unfocused/gcli-commands/blob/master/idl.mozcmd"&gt;Repo&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;memory&lt;/td&gt;
  &lt;td&gt;Get a memory report for the current page&lt;/td&gt;
  &lt;td&gt;&lt;a href="http://theunfocused.net/"&gt;Blair McBride&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://github.com/Unfocused/gcli-commands/blob/master/memory.mozcmd"&gt;Repo&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;restart&lt;/td&gt;
  &lt;td&gt;Commands to restart Firefox&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://gist.github.com/scrapmac"&gt;Girish Sharma&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://gist.github.com/2995968"&gt;Gist&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;sorttabs&lt;/td&gt;
  &lt;td&gt;Sorts visible tabs based on url&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://gist.github.com/scrapmac"&gt;Girish Sharma&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://gist.github.com/2997619"&gt;Gist&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;addon&lt;/td&gt;
  &lt;td&gt;Commands to enable and disable plugins&lt;/td&gt;
  &lt;td&gt;&lt;a href="http://www.flailingmonkey.com/"&gt;Mike Ratcliffe&lt;/a&gt;, &lt;a href="http://astithas.com/"&gt;Panagiotis Astithas&lt;/a&gt;, &lt;a href="https://github.com/Pimm"&gt;Pimm Hogeling&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://gist.github.com/3003149"&gt;Gist 1&lt;/a&gt;, &lt;a href="https://gist.github.com/2998412"&gt;Gist 2&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;time&lt;/td&gt;
  &lt;td&gt;Time how long it takes a command to run&lt;/td&gt;
  &lt;td&gt;&lt;a href="http://martndemus.nl/"&gt;Marten Schilstra&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://bug768562.bugzilla.mozilla.org/attachment.cgi?id=636791"&gt;Patch&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;date&lt;/td&gt;
  &lt;td&gt;Prints the date to the command line&lt;/td&gt;
  &lt;td&gt;&lt;a href="http://martndemus.nl/"&gt;Marten Schilstra&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://gist.github.com/2997578"&gt;Gist&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;responsive&lt;/td&gt;
  &lt;td&gt;Commands to control responsive mode&lt;/td&gt;
  &lt;td&gt;&lt;a href="http://paulrouget.com/"&gt;Paul Rouget&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://bug751904.bugzilla.mozilla.org/attachment.cgi?id=636648"&gt;Patch&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;loadscript&lt;/td&gt;
  &lt;td&gt;Loads a JavaScript resource into the current page&lt;/td&gt;
  &lt;td&gt;&lt;a href="http://martndemus.nl/"&gt;Marten Schilstra&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://gist.github.com/2998222"&gt;Gist&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;mdn&lt;/td&gt;
  &lt;td&gt;Searches the Mozilla Developer Network&lt;/td&gt;
  &lt;td&gt;&lt;a href="http://martndemus.nl/"&gt;Marten Schilstra&lt;/a&gt;, &lt;a href="http://paulrouget.com/"&gt;Paul Rouget&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://gist.github.com/2998645"&gt;Gist 1&lt;/a&gt;, &lt;a href="https://gist.github.com/1d943933ffb43a72946d"&gt;Gist 2&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;find&lt;/td&gt;
  &lt;td&gt;Go to a tab (fuzzy matched)&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://github.com/espadrine"&gt;Thaddee Tyl&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://github.com/espadrine/mozcmd/blob/master/find.mozcmd"&gt;Repo&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;search&lt;/td&gt;
  &lt;td&gt;Search and replace in page&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://github.com/graememcc"&gt;graememcc&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://gist.github.com/2996890"&gt;Gist&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;bug&lt;/td&gt;
  &lt;td&gt;Open a numbered bug&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://github.com/zombie"&gt;zombie&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://gist.github.com/3000409"&gt;Gist&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;basename/dirname&lt;/td&gt;
  &lt;td&gt;Split up file paths&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://twitter.com/fitzgen"&gt;Nick Fitzgerald&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://github.com/joewalker/mozcmd/pull/4"&gt;Pull&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;qsa&lt;/td&gt;
  &lt;td&gt;Perform querySelectorAll on the current document and return number of matches&lt;/td&gt;
  &lt;td&gt;&lt;a href="http://twitter.com/zii"&gt;Zach Carter&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://gist.github.com/3000231"&gt;Gist&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;jsbeautifier&lt;/td&gt;
  &lt;td&gt;Loads a URL, JS-beautifies it, and opens a new tab with the result&lt;/td&gt;
  &lt;td&gt;&lt;a href="http://www.open-mike.org/about"&gt;Mike Hanson&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://github.com/michaelrhanson/mozcmd"&gt;Repo&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
  &lt;td&gt;replace/rm/export&lt;/td&gt;
  &lt;td&gt;Commands to edit and export page details&lt;/td&gt;
  &lt;td&gt;&lt;a href="http://www.robodesign.ro/mihai/blog"&gt;Mihai Sucan&lt;/a&gt;&lt;/td&gt;
  &lt;td&gt;&lt;a href="https://github.com/joewalker/mozcmd/pull/1"&gt;Pull&lt;/a&gt;&lt;/td&gt;
 &lt;/tr&gt;
&lt;/table&gt;&lt;p style="text-align: center;"&gt;
  &lt;a href="http://www.flickr.com/photos/robceemoz/322394517"&gt;
    &lt;img src="http://incompleteness.me/images/posts/hackathon2.jpg" alt="people hacking" /&gt;
  &lt;/a&gt;
&lt;/p&gt;</content>
  </entry><entry>
    <title>Command Line Hackathon Details</title>
    <link href="http://incompleteness.me/blog/2012/06/25/hackathon-details/" />
    <updated>2012-06-24T13:00:00+00:00</updated>
    <id>http://incompleteness.me/blog/2012/06/25/hackathon-details/</id>
    <content type="html">&lt;p&gt;I &lt;a href="http://incompleteness.me/blog/2012/06/20/command-line-hackathon/"&gt;promised&lt;/a&gt;
details of how to take part in the command line hackathon on June 26th ...&lt;/p&gt;&lt;h2&gt;Getting Started&lt;/h2&gt;&lt;p&gt;The command line is part of the developer toolbar, which is currently
prefed off. You enable it by visiting &lt;code&gt;about:config&lt;/code&gt; in Firefox and
setting &lt;code&gt;devtools.toolbar.enabled&lt;/code&gt; to true and restarting.&lt;/p&gt;&lt;p&gt;Then use the new Tools → Web Developer → Developer Toolbar menu or
press &lt;code&gt;Ctrl+Shift+V&lt;/code&gt; (Win/Linux) or &lt;code&gt;Alt+Cmd+V&lt;/code&gt; (Mac) to
open the toolbar&lt;/p&gt;&lt;p&gt;If you want a way to keep your commands around, you'll want to use the
command directory method, if you just want a quick hack, use scratchpad.&lt;/p&gt;&lt;h3&gt;Creating commands with Scratchpad&lt;/h3&gt;&lt;p&gt;Make sure you've &lt;a href="http://antennasoft.net/robcee/2011/05/10/scratchpad-nee-workspace-web-developer-menu-landed/"&gt;enabled
chrome privilages on your scratchpad&lt;/a&gt;. Then &lt;a href="https://gist.github.com/2944612"&gt;start
with a template like this&lt;/a&gt;, and your ready to play.&lt;/p&gt;&lt;p&gt;See the docs &lt;a href="https://developer.mozilla.org/en/Tools/GCLI/Scratchpad"&gt;creating
commands with scratchpad&lt;/a&gt; on MDN for more.&lt;/p&gt;&lt;h3&gt;Creating commands from a Command Directory&lt;/h3&gt;&lt;p&gt;Find somewhere to store commands and copy &lt;a href="https://github.com/joewalker/mozcmd/blob/master/hello.mozcmd"&gt;this template&lt;/a&gt;
to a file called &lt;code&gt;hello.mozcmd&lt;/code&gt; (or you could clone the repo which
could come in handy for submitting your commands). The filename isn't important
but it should end &lt;code&gt;.mozcmd&lt;/code&gt;. Then tell Firefox where your directory
is with this command: &lt;code&gt;pref set devtools.commands.dir &amp;lt;PATH-TO-DIR&amp;gt;&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Then refresh the commands from the command dir using &lt;code&gt;cmd refresh&lt;/code&gt;
and try out the new command: &lt;code&gt;hello&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;See the docs &lt;a href="https://developer.mozilla.org/en/Tools/GCLI/Scratchpad"&gt;creating
commands with scratchpad&lt;/a&gt; on MDN for more.&lt;/p&gt;&lt;h2&gt;Finding Out More&lt;/h2&gt;&lt;p&gt;You can probably guess most of what you need from &lt;a href="https://github.com/joewalker/mozcmd/blob/master/hello.mozcmd"&gt;the example&lt;/a&gt;,
however there is &lt;a href="https://developer.mozilla.org/en/Tools/GCLI/Writing_GCLI_Commands"&gt;documentation and links&lt;/a&gt; on MDN if you need more detail.&lt;/p&gt;&lt;h2&gt;Taking Part&lt;/h2&gt;&lt;p&gt;We're collecting ideas for commands on
&lt;a href="https://etherpad.mozilla.org/command-line-hackathon"&gt;https://etherpad.mozilla.org/command-line-hackathon&lt;/a&gt;,
and we'll keep that updated during the day to coordinate things.&lt;/p&gt;&lt;p&gt;To get help and support, the best option is #devtools on irc.mozilla.org
(SSL:on, Port:6697) or see &lt;a href="https://wiki.mozilla.org/IRC"&gt;the connection
docs&lt;/a&gt; or use IRC on the web at &lt;a href="http://chat.mibbit.com"&gt;mibbit.com&lt;/a&gt;
(Connect to Mozilla, Channel: #devtools).&lt;/p&gt;&lt;div&gt;
  &lt;a href="http://www.flickr.com/photos/robhawkes/7231923050/"&gt;
    &lt;img src="http://incompleteness.me/images/posts/hackathon3.jpg" alt="people hacking" /&gt;
  &lt;/a&gt;
&lt;/div&gt;&lt;h2&gt;How to raise a bug&lt;/h2&gt;&lt;p&gt;Use &lt;a href="https://bugzilla.mozilla.org/enter_bug.cgi?alias=&amp;amp;assigned_to=nobody%40mozilla.org&amp;amp;blocked=&amp;amp;bug_file_loc=http%3A%2F%2F&amp;amp;bug_severity=normal&amp;amp;bug_status=NEW&amp;amp;cf_blocking_basecamp=---&amp;amp;cf_blocking_kilimanjaro=---&amp;amp;cf_crash_signature=&amp;amp;cf_status_esr10=---&amp;amp;cf_status_firefox13=---&amp;amp;cf_status_firefox14=---&amp;amp;cf_status_firefox15=---&amp;amp;cf_status_firefox16=---&amp;amp;cf_tracking_esr10=---&amp;amp;cf_tracking_firefox13=---&amp;amp;cf_tracking_firefox14=---&amp;amp;cf_tracking_firefox15=---&amp;amp;cf_tracking_firefox16=---&amp;amp;comment=%0D%0AWhat%20did%20you%20do%20%28steps%20to%20reproduce%29%3F%0D%0A%0D%0A%0D%0AWhat%20happened%3F%0D%0A%0D%0A%0D%0AWhat%20should%20have%20happened%3F%0D%0A%0D%0A&amp;amp;component=Developer%20Tools%3A%20Console&amp;amp;contenttypeentry=&amp;amp;contenttypemethod=autodetect&amp;amp;contenttypeselection=text%2Fplain&amp;amp;data=&amp;amp;defined_groups=1&amp;amp;dependson=&amp;amp;description=&amp;amp;flag_type-203=X&amp;amp;flag_type-325=X&amp;amp;flag_type-37=X&amp;amp;flag_type-41=X&amp;amp;flag_type-5=X&amp;amp;flag_type-607=X&amp;amp;flag_type-720=X&amp;amp;flag_type-721=X&amp;amp;flag_type-737=X&amp;amp;flag_type-748=X&amp;amp;flag_type-775=X&amp;amp;flag_type-780=X&amp;amp;flag_type-781=X&amp;amp;form_name=enter_bug&amp;amp;keywords=&amp;amp;maketemplate=Remember%20values%20as%20bookmarkable%20template&amp;amp;op_sys=All&amp;amp;priority=--&amp;amp;product=Firefox&amp;amp;qa_contact=developer.tools.console%40firefox.bugs&amp;amp;rep_platform=All&amp;amp;requestee_type-203=&amp;amp;requestee_type-325=&amp;amp;requestee_type-41=&amp;amp;requestee_type-5=&amp;amp;requestee_type-607=&amp;amp;requestee_type-748=&amp;amp;requestee_type-781=&amp;amp;short_desc=GCLI&amp;amp;status_whiteboard=&amp;amp;target_milestone=---&amp;amp;version=Trunk"&gt;this link&lt;/a&gt;
to tell us about any problems with the command line.&lt;/p&gt;&lt;h2&gt;Submitting a Command&lt;/h2&gt;&lt;p&gt;You can submit a command any of the following ways:&lt;p&gt;

&lt;ol&gt;
  &lt;li&gt;Fork &lt;a href="https://github.com/joewalker/mozcmd"&gt;this repo&lt;/a&gt; and
  create a pull request (preferred)&lt;/li&gt;
  &lt;li&gt;Create a new etherpad containing your submission and put a link to your
  new etherpad in the &lt;a href="https://etherpad.mozilla.org/command-line-hackathon"&gt;main
  etherpad&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Email it to jwalker at mozilla.com.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Whichever way you choose, please include the following in your submission so
we know you're happy for us to distribute your work:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Signed-off-by: Your Name &amp;lt;email@example.com&amp;gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Adding this text is a statement that you have the right to contribute the
code under the MPLv2 for inclusion in the Mozilla codebase.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hope to see you on June 26th&lt;/strong&gt;&lt;/p&gt;

&lt;/p&gt;&lt;/p&gt;</content>
  </entry><entry>
    <title>Firefox Command Line Hackathon</title>
    <link href="http://incompleteness.me/blog/2012/06/20/command-line-hackathon/" />
    <updated>2012-06-20T12:00:00+00:00</updated>
    <id>http://incompleteness.me/blog/2012/06/20/command-line-hackathon/</id>
    <content type="html">&lt;p&gt;TL;DR: On June 26th, the Firefox developer tools team is holding a hackathon to
add to the list of commands for the Firefox developers toolbar.

&lt;/p&gt;&lt;aside&gt;
  &lt;a href="http://www.flickr.com/photos/donotlick/5272510170"&gt;
    &lt;img src="http://incompleteness.me/images/posts/hackathon1.jpg" alt="people hacking" /&gt;
  &lt;/a&gt;
&lt;/aside&gt;&lt;p&gt;See this recent &lt;a href="http://incompleteness.me/blog/2012/06/18/firefox-command-line/"&gt;blog post for context on the new developers command line&lt;/a&gt;.

&lt;/p&gt;&lt;p&gt;I'm in the process of finishing off &lt;a href="https://bugzilla.mozilla.org/show_bug.cgi?id=724055"&gt;bug 724055&lt;/a&gt; which will make it as
easy as is possible to create new commands, just set a pref to point to a
directory where your commands are stored in JSON (ish) files, and you're done.

&lt;/p&gt;&lt;p&gt;In the next few days I'll update this post (Update: &lt;a href="http://incompleteness.me/blog/2012/06/25/hackathon-details/"&gt;see here&lt;/a&gt;)
with a set of resources for creating commands and ideas for commands.
We'll hang out in IRC and crank away and see how many commands we can get
written in a day.

&lt;/p&gt;&lt;p&gt;If you can spare some time, we'd love to have some help.

&lt;/p&gt;&lt;p&gt;&lt;small&gt;Update: Originally this post had a date typo and said the 27th. The real date
is the 26th.&lt;/small&gt;

&lt;/p&gt;</content>
  </entry><entry>
    <title>Firefox Command Line for Developers</title>
    <link href="http://incompleteness.me/blog/2012/06/18/firefox-command-line/" />
    <updated>2012-06-18T12:00:00+00:00</updated>
    <id>http://incompleteness.me/blog/2012/06/18/firefox-command-line/</id>
    <content type="html">&lt;p&gt;TL;DR: We're adding a toolbar to Firefox, for developers, which includes a
command line.
It's a great place to add small tools and experimental features, and we're
making it easy to add your own commands.

&lt;/p&gt;&lt;p&gt;The toolbar should land in Firefox 16 or 17 and will look like this:

&lt;/p&gt;&lt;div style="overflow-x: hidden;"&gt;
  &lt;img src="http://incompleteness.me/images/posts/gcli-look-mac.png" alt="GCLI on a Mac" /&gt;
&lt;/div&gt;&lt;p&gt;The buttons are useful, but I'm most excited about the commands.
We can add an almost unlimited set of commands here without cluttering up the
UI, or making things slow, and we've done lots of work to make the command line
easy to use.

&lt;/p&gt;&lt;p&gt;The challenge: It might be stretching things a little to call the command line
a 'platform', and commands 'apps', but the command line still needs commands to
be successful. There's a list of commands that we're working on for
manipulating Firefox developer tools, and we'll be expanding this list to
include system level commands too.

&lt;/p&gt;&lt;p&gt;We're planning on a hackathon in a couple of weeks to add to the list of
commands and to check that it really as as easy as we think it is to extend.
Details soon.

&lt;/p&gt;&lt;p&gt;If you want to try it out, it's in Nightly now, you'll need to flip the
&lt;code&gt;devtools.toolbar.enable&lt;/code&gt; preference in &lt;code&gt;about:config&lt;/code&gt;.
&lt;/p&gt;</content>
  </entry>

</feed>
